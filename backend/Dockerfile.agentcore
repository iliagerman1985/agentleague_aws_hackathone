# Dockerfile for AWS AgentCore deployment
# Based on the main backend Dockerfile with AgentCore entrypoint
FROM python:3.13-slim

WORKDIR /app

# Install system dependencies, PostgreSQL client libraries, and uv
RUN --mount=type=cache,target=/var/cache/apt \
    --mount=type=cache,target=/var/lib/apt \
    bash -lc 'set -euo pipefail \
    && apt-get update \
    && apt-get install -y curl wget libpq-dev gcc \
    && curl -LsSf https://astral.sh/uv/install.sh | sh \
    && apt-get clean && rm -rf /var/lib/apt/lists/*'
ENV PATH="/root/.local/bin:$PATH"

# Copy dependency files
COPY pyproject.toml uv.lock ./

# Copy source code before syncing (workspace resolution)
COPY libs/ ./libs/
COPY backend/ ./backend/

# Install dependencies (prod)
RUN --mount=type=cache,target=/root/.cache/uv uv sync --frozen --no-dev

# Install dev dependencies and sync again (separate layer for better caching)
RUN --mount=type=cache,target=/root/.cache/uv uv sync --frozen

# Create non-root user
RUN useradd --create-home --shell /bin/bash app \
    && chown -R app:app /app
USER app

# Expose port for AgentCore
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/ping || exit 1

# Run the AgentCore application
CMD ["uv", "run", "--package", "backend", "python", "backend/app/services/agent_runner/agentcore_handler.py"]